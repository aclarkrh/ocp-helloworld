<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.jboss.as.quickstarts</groupId>
	<artifactId>jws-helloworld</artifactId>
	<version>7.0.0.Final</version>
	<packaging>war</packaging>
	<name>JBoss AS Quickstarts: Helloworld</name>

	<url>http://jboss.org/jbossas</url>
	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/copyleft/lesser.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Used to overide source dirs for Kubernetes template generation -->
		<src.dir>src/main/java</src.dir>
		<src.test.dir>src/test/java</src.test.dir>
	</properties>

	<!-- Include the JBoss Maven repository so we can access JBoss artifacts -->
	<repositories>
		<repository>
			<id>jboss-public-repository</id>
			<name>JBoss Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>jboss-public-repository</id>
			<name>JBoss Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
				of artifacts. We use this here so that we always get the correct versions
				of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can read this
				as the JBoss stack of the Java EE 6 Web Profile APIs), and we use version
				2.0.0.Beta1 which is the latest release of the stack. You can actually use
				this stack with any version of JBoss AS that implements Java EE 6, not just
				JBoss AS 7! -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-web-6.0</artifactId>
				<version>2.0.0.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Import the CDI API, we use provided scope as the API is included in
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Servlet API, we use provided scope as the API is included
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>

		<sourceDirectory>${src.dir}</sourceDirectory>
		<testSourceDirectory>${src.test.dir}</testSourceDirectory>

		<!-- Set the name of the war, used as the context root when the app is
			deployed -->
		<finalName>jboss-as-helloworld</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- JBoss AS plugin to deploy war -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.0.0.Final</version>
			</plugin>
			<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>kube-dsl</id>
			<properties>

				<src.dir>src/config/java</src.dir>
				<src.test.dir>src/config-test/java</src.test.dir>


				<maven.test.skip>true</maven.test.skip>

				<fabric8.version>2.2.136</fabric8.version>
				<fabric8.useBuildConfig>true</fabric8.useBuildConfig>
				<fabric8.useDeploymentConfig>true</fabric8.useDeploymentConfig>

				<fabric8.parameter.GIT_URI.description>URL to the Git repository</fabric8.parameter.GIT_URI.description>
				<fabric8.parameter.GIT_URI.value>https://github.com/aclarkrh/ocp-helloworld</fabric8.parameter.GIT_URI.value>

				<!-- This value is normally populated at build time by the Jenkins job -->
				<fabric8.parameter.SOURCE_REPOSITORY_REF.description>Git branch/tag references</fabric8.parameter.SOURCE_REPOSITORY_REF.description>
				<fabric8.parameter.SOURCE_REPOSITORY_REF.value></fabric8.parameter.SOURCE_REPOSITORY_REF.value>

				<fabric8.parameter.CONTEXT_DIR.description>The path within the repository where the OpenShift code artifacts can be found with the repo.</fabric8.parameter.CONTEXT_DIR.description>
				<fabric8.parameter.CONTEXT_DIR.value></fabric8.parameter.CONTEXT_DIR.value>

				<fabric8.parameter.SOURCE_SECRET.description>The secret containing the git credentials.</fabric8.parameter.SOURCE_SECRET.description>
				<fabric8.parameter.SOURCE_SECRET.value>git-basic-secret</fabric8.parameter.SOURCE_SECRET.value>

				<fabric8.parameter.APPLICATION_NAME.description>The name for the application.</fabric8.parameter.APPLICATION_NAME.description>
				<fabric8.parameter.APPLICATION_NAME.value>${project.artifactId}</fabric8.parameter.APPLICATION_NAME.value>

				<fabric8.parameter.APPLICATION_VERSION.description>The version of the application.</fabric8.parameter.APPLICATION_VERSION.description>
				<fabric8.parameter.APPLICATION_VERSION.value>${project.version}</fabric8.parameter.APPLICATION_VERSION.value>

				<fabric8.parameter.HOSTNAME_HTTP.description>Custom hostname for http service route. Leave blank for default hostname, e.g.: &lt;application-name&gt;-&lt;project&gt;.&lt;default-domain-suffix&gt;</fabric8.parameter.HOSTNAME_HTTP.description>
				<fabric8.parameter.HOSTNAME_HTTP.value></fabric8.parameter.HOSTNAME_HTTP.value>

				<fabric8.parameter.HOSTNAME_HTTPS.description>Custom hostname for https service route. Leave blank for default hostname, e.g. secure-&lt;application-name&gt;-&lt;project&gt;.&lt;default-domain-suffix&gt;</fabric8.parameter.HOSTNAME_HTTPS.description>
				<fabric8.parameter.HOSTNAME_HTTPS.value></fabric8.parameter.HOSTNAME_HTTPS.value>

				<fabric8.parameter.XPAAS_IS_PULL_NAMESPACE.description>Project where the xPaaS ImageStreams and BuildConfigs are installed.</fabric8.parameter.XPAAS_IS_PULL_NAMESPACE.description>
				<fabric8.parameter.XPAAS_IS_PULL_NAMESPACE.value>openshift</fabric8.parameter.XPAAS_IS_PULL_NAMESPACE.value>

				<fabric8.parameter.XPAAS_IS_NAME.description>The xPaaS Image name.</fabric8.parameter.XPAAS_IS_NAME.description>
				<fabric8.parameter.XPAAS_IS_NAME.value>jboss-webserver30-tomcat8-openshift</fabric8.parameter.XPAAS_IS_NAME.value>

				<fabric8.parameter.XPAAS_IS_TAG.description>Tag that the xPaaS ImageStream should be pushed to</fabric8.parameter.XPAAS_IS_TAG.description>
				<fabric8.parameter.XPAAS_IS_TAG.value>latest</fabric8.parameter.XPAAS_IS_TAG.value>

				<fabric8.parameter.APP_IS_PULL_NAMESPACE.description>Project where the application ImageStreams and BuildConfigs are installed.</fabric8.parameter.APP_IS_PULL_NAMESPACE.description>
				<fabric8.parameter.APP_IS_PULL_NAMESPACE.value>ticket-monster</fabric8.parameter.APP_IS_PULL_NAMESPACE.value>

				<fabric8.parameter.READINESS_PROBE_PATH.description>The path to probe for the HTTP readiness check</fabric8.parameter.READINESS_PROBE_PATH.description>
				<fabric8.parameter.READINESS_PROBE_PATH.value>/HelloWorld</fabric8.parameter.READINESS_PROBE_PATH.value>

				<fabric8.parameter.LIVENESS_PROBE_PATH.description>The path to probe for the HTTP liveness check</fabric8.parameter.LIVENESS_PROBE_PATH.description>
				<fabric8.parameter.LIVENESS_PROBE_PATH.value>/HelloWorld</fabric8.parameter.LIVENESS_PROBE_PATH.value>

				<fabric8.parameter.CPU_REQUEST.description>The requested CPU resource for a container</fabric8.parameter.CPU_REQUEST.description>
				<fabric8.parameter.CPU_REQUEST.value>200m</fabric8.parameter.CPU_REQUEST.value>

				<fabric8.parameter.MEM_REQUEST.description>The requested memory resource for a container</fabric8.parameter.MEM_REQUEST.description>
				<fabric8.parameter.MEM_REQUEST.value>512Mi</fabric8.parameter.MEM_REQUEST.value>

				<fabric8.parameter.CPU_LIMIT.description>The CPU resource limit for a container</fabric8.parameter.CPU_LIMIT.description>
				<fabric8.parameter.CPU_LIMIT.value>800m</fabric8.parameter.CPU_LIMIT.value>

				<fabric8.parameter.MEM_LIMIT.description>The memory resource limit for a container</fabric8.parameter.MEM_LIMIT.description>
				<fabric8.parameter.MEM_LIMIT.value>1024Mi</fabric8.parameter.MEM_LIMIT.value>

			</properties>
			<dependencies>
				<!--these dependencies are only used for KubeDSL generation -->
				<dependency>
					<groupId>io.fabric8</groupId>
					<artifactId>kubernetes-generator</artifactId>
					<version>${fabric8.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
					<version>19.0</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-all</artifactId>
					<version>2.4.7</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>commons-lang</groupId>
					<artifactId>commons-lang</artifactId>
					<version>2.6</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<resources>
					<resource>
						<directory>src/config/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<testResources>
					<testResource>
						<directory>src/config-test/resources</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>
				<plugins>
					<plugin>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.3.1</version>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>${fabric8.version}</version>
						<executions>
							<execution>
								<id>json</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>json</goal>
								</goals>
							</execution>
							<execution>
								<id>attach</id>
								<phase>package</phase>
								<goals>
									<goal>attach</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.gmavenplus</groupId>
						<artifactId>gmavenplus-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>fix-values</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<scripts>
										<!-- OpenShift doesn't like certain object names: -->
										<!-- When version contains uppercase SNAPSHOT OCP complains, so
											convert to lower case -->
										<!-- When version contains '.' if fails, so convert to '-' -->
										<!-- *** WORKAROUND - REQUIRES PROPER SOLUTION *** Service names
											can't be greater than 24 characters, so drop '-snapshot' -->
										<script>
                                                <![CDATA[
                                                        import org.apache.commons.lang.StringUtils

                                                        project.properties["fabric8.parameter.APPLICATION_VERSION.value"] = StringUtils.lowerCase(project.properties["fabric8.parameter.APPLICATION_VERSION.value"])
                                                        project.properties["fabric8.parameter.APPLICATION_VERSION.value"] = StringUtils.replace(project.properties["fabric8.parameter.APPLICATION_VERSION.value"], ".", "-")
                                                        project.properties["fabric8.parameter.APPLICATION_VERSION.value"] = StringUtils.replace(project.properties["fabric8.parameter.APPLICATION_VERSION.value"], "-snapshot", "-s")
                                                        project.properties["fabric8.parameter.APPLICATION_VERSION.value"] = StringUtils.replace(project.properties["fabric8.parameter.APPLICATION_VERSION.value"], "-final", "-f")

                                                        if(StringUtils.contains(project.properties["fabric8.parameter.WAR_FILE_URL.value"], "SNAPSHOT"))
                                                                project.properties["fabric8.parameter.WAR_FILE_URL.value"] = StringUtils.replace(project.properties["fabric8.parameter.WAR_FILE_URL.value"], "release", "snapshot")
                                                ]]>
										</script>
									</scripts>
								</configuration>
							</execution>
							<execution>
								<id>split-build-run</id>
								<phase>compile</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<properties>
										<property>
											<name>templateName</name>
											<value>${project.artifactId}-${project.version}</value>
										</property>
									</properties>
									<scripts>
										<script>file:///${project.basedir}/src/config/resources/split-templates.groovy</script>
									</scripts>
								</configuration>
							</execution>
						</executions>

						<dependencies>
							<dependency>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
								<version>2.4.7</version>
								<scope>runtime</scope>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9.1</version>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>target/classes/kubernetes-build.json</file>
											<type>json</type>
											<classifier>kubernetes-build</classifier>
										</artifact>
										<artifact>
											<file>target/classes/kubernetes-run.json</file>
											<type>json</type>
											<classifier>kubernetes-run</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
